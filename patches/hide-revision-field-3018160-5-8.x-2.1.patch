diff --git a/hide_revision_field.module b/hide_revision_field.module
index 3930d28..e67afb0 100644
--- a/hide_revision_field.module
+++ b/hide_revision_field.module
@@ -42,16 +42,18 @@ function hide_revision_field_form_user_form_alter(&$form, FormStateInterface $fo
       /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display */
       $form_display = $entity_type_manager->getStorage('entity_form_display')
         ->load("{$type_id}.{$bundle_id}.default");
-      $log = $form_display->getComponent($keys['revision_log_message']);
-      if (!empty($log['settings']['allow_user_settings'])) {
+      if (!empty($form_display)) {
+        $log = $form_display->getComponent($keys['revision_log_message']);
+        if (!empty($log['settings']['allow_user_settings'])) {
 
-        $entity[$bundle_id] = [
-          '#type' => 'checkbox',
-          '#title' => t('Show Revision Log Field on "%bundle" forms', [
-            '%bundle' => $bundle['label'],
-          ]),
-          '#default_value' => isset($settings[$type_id][$bundle_id]) ? $settings[$type_id][$bundle_id] : $log['settings']['show'],
-        ];
+          $entity[$bundle_id] = [
+            '#type' => 'checkbox',
+            '#title' => t('Show Revision Log Field on "%bundle" forms', [
+                '%bundle' => $bundle['label'],
+              ]),
+            '#default_value' => isset($settings[$type_id][$bundle_id]) ? $settings[$type_id][$bundle_id] : $log['settings']['show'],
+          ];
+        }
       }
     }
     if ($entity) {
diff --git a/src/Plugin/Field/FieldWidget/RevisionLogWidget.php b/src/Plugin/Field/FieldWidget/RevisionLogWidget.php
index 1e4c32b..1cb468e 100644
--- a/src/Plugin/Field/FieldWidget/RevisionLogWidget.php
+++ b/src/Plugin/Field/FieldWidget/RevisionLogWidget.php
@@ -161,21 +161,20 @@ class RevisionLogWidget extends StringTextareaWidget implements ContainerFactory
     $show = $settings['show'];
 
     if ($settings['permission_based']) {
-      if ($this->user->hasPermission('access revision field')) {
-        $show = TRUE;
-      }
-      else {
-        $show = FALSE;
-      }
+      $show = $this->user->hasPermission('access revision field');
     }
 
     // Check for user level personalization.
     if ($settings['allow_user_settings'] && $this->user->hasPermission('administer revision field personalization')) {
       /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
       $entity = $form_state->getFormObject()->getEntity();
-      $user_settings = unserialize(User::load($this->user->id())->get('revision_log_settings')->value);
-      if (isset($user_settings[$entity->getEntityType()->id()][$entity->bundle()])) {
-        $show = $user_settings[$entity->getEntityType()->id()][$entity->bundle()];
+      if (isset($entity)) {
+        $entity_type_id = $entity->getEntityType()->id();
+        $bundle = $entity->bundle();
+        $user_settings = unserialize(User::load($this->user->id())->get('revision_log_settings')->value);
+        if (isset($user_settings[$entity_type_id][$bundle])) {
+          $show = $user_settings[$entity_type_id][$bundle];
+        }
       }
     }
 
