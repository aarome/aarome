diff --git a/menu_trail_by_path.services.yml b/menu_trail_by_path.services.yml
index 25c21e5..1119025 100644
--- a/menu_trail_by_path.services.yml
+++ b/menu_trail_by_path.services.yml
@@ -11,3 +11,18 @@ services:
   menu_trail_by_path.menu_helper:
     class: Drupal\menu_trail_by_path\Menu\MenuTreeStorageMenuHelper
     arguments: ['@plugin.manager.menu.link', '@menu_trail_by_path.menu_tree_storage']
+  menu_trail_by_path.active_trail:
+    class: Drupal\menu_trail_by_path\MenuTrailByPathActiveTrail
+    decorates: menu.active_trail
+    public: false
+    arguments:
+      - '@menu_trail_by_path.active_trail.inner'
+      - '@plugin.manager.menu.link'
+      - '@current_route_match'
+      - '@cache.menu'
+      - '@lock'
+      - '@menu_trail_by_path.path_helper'
+      - '@menu_trail_by_path.menu_helper'
+      - '@router.request_context'
+      - '@language_manager'
+      - '@config.factory'
diff --git a/src/MenuTrailByPathActiveTrail.php b/src/MenuTrailByPathActiveTrail.php
index dab24a8..3a9d082 100644
--- a/src/MenuTrailByPathActiveTrail.php
+++ b/src/MenuTrailByPathActiveTrail.php
@@ -2,20 +2,21 @@
 
 namespace Drupal\menu_trail_by_path;
 
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Lock\LockBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Menu\MenuActiveTrail;
+use Drupal\Core\Menu\MenuActiveTrailInterface;
 use Drupal\Core\Menu\MenuLinkManagerInterface;
+use Drupal\Core\Routing\RequestContext;
 use Drupal\Core\Routing\RouteMatchInterface;
-use Drupal\Core\Cache\CacheBackendInterface;
-use Drupal\Core\Lock\LockBackendInterface;
-use Drupal\menu_trail_by_path\Menu\MenuHelperInterface;
 use Drupal\menu_trail_by_path\Path\PathHelperInterface;
-use Drupal\Core\Routing\RequestContext;
-use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\menu_trail_by_path\Menu\MenuHelperInterface;
 use Drupal\system\Entity\Menu;
 
 /**
- * Overrides the class for the file entity normalizer from HAL.
+ * Decorates menu active trail class for the file entity normalizer from HAL.
  */
 class MenuTrailByPathActiveTrail extends MenuActiveTrail {
 
@@ -35,21 +36,36 @@ class MenuTrailByPathActiveTrail extends MenuActiveTrail {
   const MENU_TRAIL_CORE = 'core';
 
   /**
+   * The decorated menu active trail service.
+   *
+   * @var \Drupal\Core\Menu\MenuActiveTrailInterface
+   */
+  protected $menuActiveTrail;
+
+  /**
+   * The current path helper service.
+   *
    * @var \Drupal\menu_trail_by_path\Path\PathHelperInterface
    */
   protected $pathHelper;
 
   /**
+   * The menu tree storage helper service.
+   *
    * @var \Drupal\menu_trail_by_path\Menu\MenuHelperInterface
    */
   protected $menuHelper;
 
   /**
+   * The request context service.
+   *
    * @var \Drupal\Core\Routing\RequestContext
    */
   protected $context;
 
   /**
+   * The language manager.
+   *
    * @var \Drupal\Core\Language\LanguageManagerInterface
    */
   protected $languageManager;
@@ -62,19 +78,32 @@ class MenuTrailByPathActiveTrail extends MenuActiveTrail {
   protected $config;
 
   /**
-   * MenuTrailByPathActiveTrail constructor.
+   * Constructs a MenuTrailByPathActiveTrail object.
+   *
+   * @param \Drupal\Core\Menu\MenuActiveTrailInterface $menu_active_trail
+   *   The active menu trail service being decorated.
    * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager
+   *   The menu link plugin manager.
    * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   *   A route match object for finding the active link.
    * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   *   The cache backend.
    * @param \Drupal\Core\Lock\LockBackendInterface $lock
+   *   The lock backend.
    * @param \Drupal\menu_trail_by_path\Path\PathHelperInterface $path_helper
+   *   The current path helper service.
    * @param \Drupal\menu_trail_by_path\Menu\MenuHelperInterface $menu_helper
+   *   The menu tree storage helper service.
    * @param \Drupal\Core\Routing\RequestContext $context
+   *   The request context service.
    * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   *   The language manager.
    * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   *   The configuration factory.
    */
-  public function __construct(MenuLinkManagerInterface $menu_link_manager, RouteMatchInterface $route_match, CacheBackendInterface $cache, LockBackendInterface $lock, PathHelperInterface $path_helper, MenuHelperInterface $menu_helper, RequestContext $context, LanguageManagerInterface $languageManager, ConfigFactoryInterface $config_factory) {
+  public function __construct(MenuActiveTrailInterface $menu_active_trail, MenuLinkManagerInterface $menu_link_manager, RouteMatchInterface $route_match, CacheBackendInterface $cache, LockBackendInterface $lock, PathHelperInterface $path_helper, MenuHelperInterface $menu_helper, RequestContext $context, LanguageManagerInterface $languageManager, ConfigFactoryInterface $config_factory) {
     parent::__construct($menu_link_manager, $route_match, $cache, $lock);
+    $this->menuActiveTrail = $menu_active_trail;
     $this->pathHelper      = $path_helper;
     $this->menuHelper      = $menu_helper;
     $this->context         = $context;
@@ -95,13 +124,23 @@ class MenuTrailByPathActiveTrail extends MenuActiveTrail {
     return $this->cid;
   }
 
+  /**
+   * {@inheritdoc}
+   *
+   * Cannot use decorated service here since we need to look up in our own cache
+   * storage, not the decorated service's.
+   */
+  public function getActiveTrailIds($menu_name) {
+    return $this->get($menu_name);
+  }
+
   /**
    * {@inheritdoc}
    */
   protected function doGetActiveTrailIds($menu_name) {
     // Parent ids; used both as key and value to ensure uniqueness.
     // We always want all the top-level links with parent == ''.
-    $active_trail = array('' => '');
+    $active_trail = ['' => ''];
 
     $entity = Menu::load($menu_name);
     if (!$entity) {
@@ -129,22 +168,25 @@ class MenuTrailByPathActiveTrail extends MenuActiveTrail {
   }
 
   /**
-   * Fetches the deepest, heaviest menu link which matches the deepest trail path url.
+   * Fetches the deepest, heaviest menu link.
+   *
+   * Matches against the deepest trail path url.
    *
    * @param string $menu_name
    *   The menu within which to find the active trail link.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface|NULL
-   *   The menu link for the given menu, or NULL if there is no matching menu link.
+   * @return \Drupal\Core\Menu\MenuLinkInterface|null
+   *   The menu link for the given menu, or NULL if there is no matching menu
+   *   link.
    */
   public function getActiveTrailLink($menu_name) {
     $menu_links = $this->menuHelper->getMenuLinks($menu_name);
     $trail_urls = $this->pathHelper->getUrls();
 
+    /** @var \Drupal\Core\Url $trail_url */
     foreach (array_reverse($trail_urls) as $trail_url) {
+      /** @var \Drupal\Core\Menu\MenuLinkInterface $menu_link */
       foreach (array_reverse($menu_links) as $menu_link) {
-        /* @var $menu_link \Drupal\Core\Menu\MenuLinkInterface */
-        /* @var $trail_url \Drupal\Core\Url */
         if ($menu_link->getUrlObject()->toString() == $trail_url->toString()) {
           return $menu_link;
         }
@@ -153,4 +195,15 @@ class MenuTrailByPathActiveTrail extends MenuActiveTrail {
 
     return NULL;
   }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getActiveLink($menu_name = NULL) {
+    return call_user_func_array(
+      [$this->menuActiveTrail, 'getActiveLink'],
+      func_get_args()
+    );
+  }
+
 }
diff --git a/src/MenuTrailByPathServiceProvider.php b/src/MenuTrailByPathServiceProvider.php
deleted file mode 100644
index 2054932..0000000
--- a/src/MenuTrailByPathServiceProvider.php
+++ /dev/null
@@ -1,25 +0,0 @@
-<?php
-
-namespace Drupal\menu_trail_by_path;
-
-use \Drupal\Core\DependencyInjection\ServiceProviderBase;
-use \Drupal\Core\DependencyInjection\ContainerBuilder;
-use Symfony\Component\DependencyInjection\Reference;
-
-/**
- * Overrides the class for the menu link tree.
- */
-class MenuTrailByPathServiceProvider extends ServiceProviderBase {
-  /**
-   * {@inheritdoc}
-   */
-  public function alter(ContainerBuilder $container) {
-    $definition = $container->getDefinition('menu.active_trail');
-    $definition->setClass('Drupal\menu_trail_by_path\MenuTrailByPathActiveTrail');
-    $definition->addArgument(new Reference('menu_trail_by_path.path_helper'));
-    $definition->addArgument(new Reference('menu_trail_by_path.menu_helper'));
-    $definition->addArgument(new Reference('router.request_context'));
-    $definition->addArgument(new Reference('language_manager'));
-    $definition->addArgument(new Reference('config.factory'));
-  }
-}
